@use 'sass:map';
@use 'sass:math';

$layers: (
  'wrapper': 2,
  'fauxBg': 1,
);

.Hero__root {
  overflow-x: clip;
  position: relative;

  background-color: theme('colors.leaf.950');
}

.Hero__bg {
  pointer-events: none;

  position: absolute;
  z-index: map.get($layers, 'fauxBg');
  inset: 0;

  width: 100%;
  height: 100%;
}

.Hero__wrapper {
  position: relative;
  z-index: map.get($layers, 'wrapper');

  display: flex;
  align-items: stretch;
  justify-content: space-between;

  @screen <md {
    flex-direction: column;
  }

  @screen <sm {
    padding-inline: theme('spacing.6');
    gap: theme('spacing.6');
  }

  @screen md {
    padding-inline: theme('spacing.12');
    gap: theme('spacing.12');
  }

  @screen lg> {
    padding-inline: theme('spacing.24');
    gap: theme('spacing.24');
  }
}

.Hero,
.Hero__children {
  flex: 1 1 auto;
  
  @screen xs {
    padding-block: theme('spacing.6') theme('spacing.12');
  }

  @screen sm> {
    // padding-block: theme('spacing.12') theme('spacing.24');
    padding-block: calc(var(--gap) / 2) calc(var(--gap) / 2);
  }
}

.Hero {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: calc(var(--gap) / 2);
}

.Hero__heading,
.Hero__blurb {

  @screen sm> {
    margin-inline: auto;
    text-align: center;
  }

  text-wrap: balance;
}

.Hero__heading {

  h1 {
    font-family: theme('fontFamily.body');

    @screen md {
      font-size: theme('fontSize.7xl');
    }
    
    @screen lg> {
      font-size: theme('fontSize.8xl');
    }

    $this: &;

    > strong {
      
      @at-root #{$this} {
        
        &, & > strong {
          font-weight: theme('fontWeight.bold');
        }
      }

      color: theme('colors.sun.300' / 0%);
      -webkit-text-stroke: theme('spacing.px') theme('colors.sun.300');
      background-image: linear-gradient(to bottom, theme('colors.sun.300'), theme('colors.sun.500') 75%);
      background-clip: text;
      -webkit-background-clip: text;
    }

    animation-name: fadeInUp;
    animation-fill-mode: both;
    animation-delay: theme('transitionDuration.300');
    animation-duration: theme('transitionDuration.700');
    animation-timing-function: theme('transitionTimingFunction.in-out');

    @keyframes fadeInUp {
      0% {
        opacity: 0;
        transform:
          scale(0.8)
          translate3d(0, theme('spacing.24'), 0);
      }
      100% {
        opacity: theme('opacity.100');
        transform:
          scale(1)
          translate3d(0, 0, 0);
      }
    }
  }
}

.Hero__blurb {

  @screen xs {
    margin-inline: theme('spacing[-4]');
    padding: calc(var(--gap) / 2) theme('spacing.8');
  }

  @screen sm> {
    padding: theme('spacing.12') theme('spacing.9');
  }

  color: theme('colors.sun.50');
  font-family: theme('fontFamily.heading');

  background-image:
    linear-gradient(
      to bottom,
      theme('colors.sun.base' / 20%),
      theme('colors.sun.base' / 10%) 15%,
      theme('colors.sun.base' / 10%) 85%,
      theme('colors.sun.base' / 20%),
    );

  backdrop-filter: blur(theme('spacing.2'));

  $this: &;

  transition:
    opacity theme('transitionDuration.1000') theme('transitionTimingFunction.out'),
    transform theme('transitionDuration.500') theme('transitionTimingFunction.out');
  opacity: 0;
  transform:
    scale(0.8)
    translate3d(0, theme('spacing.12'), 0);

  @at-root :global(.squircle) #{$this} {
    opacity: 1;
    transform:
      scale(1)
      translate3d(0, 0, 0);
  }

  @supports not (mask-image: paint(squircle)) {
    border-radius: theme('borderRadius.3xl');
  }

  @supports (mask-image: paint(squircle)) {

    @at-root :global(.squircle) #{$this} {
      --squircle-radius: 50px;
      --squircle-smooth: 1;
      mask-image: paint(squircle);
    }
  }

  ul {

    @screen sm> {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5em;
    }

    > li {
      
      &::before {
        content: '\25AA';
        display: inline-block;
        padding-inline-end: 0.5em;
      }

      &:first-child {
        
        @screen sm> {

          &::before {
            content: unset;
          }
        }
      }
    }
  }

  p {
    font-family: theme('fontFamily.body');
    font-weight: theme('fontWeight.bold');
    
    @screen sm> {
      margin-block-start: 0;
    }

    > em {
      font-style: normal;
    }
  }
}

.Hero__em {
  position: relative;
  display: inline-block;
}

.Hero__em__underline {
  position: absolute;
  z-index: -1;
  inset-block-end: theme('spacing[-1.5]');
  inset-inline: theme('spacing[-1]');

  fill: theme('colors.sun.base');
}

.Hero__links {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.5em;
}

.Hero__link {
  text-decoration: underline;
}

.Hero__children {

  @screen lg {
    @apply w-5/12;
  }

  @screen xl {
    @apply w-5/12;
  }
}
